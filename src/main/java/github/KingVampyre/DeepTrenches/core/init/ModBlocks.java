package github.KingVampyre.DeepTrenches.core.init;

import github.KingVampyre.DeepTrenches.common.block.*;
import github.KingVampyre.DeepTrenches.core.block.FungusBlock;
import github.KingVampyre.DeepTrenches.core.block.*;
import github.Louwind.Features.impl.block.FeaturesSaplingBlock;
import net.minecraft.block.AbstractBlock.Settings;
import net.minecraft.block.*;
import net.minecraft.sound.BlockSoundGroup;

import static github.KingVampyre.DeepTrenches.core.init.ModMaterials.FUNGUS;
import static github.KingVampyre.DeepTrenches.core.init.SaplingGenerators.*;
import static github.KingVampyre.DeepTrenches.core.init.StatusEffects.*;
import static net.minecraft.block.Blocks.*;
import static net.minecraft.block.PressurePlateBlock.ActivationRule.EVERYTHING;
import static net.minecraft.entity.effect.StatusEffects.*;

public class ModBlocks {

	public static final Block CYAN_BIOLUMINESCENT_BLOCK = new Block(Settings.copy(SEA_LANTERN).luminance(state -> 15).strength(1.5F, 6F));
	public static final Block GREEN_BIOLUMINESCENT_BLOCK = new Block(Settings.copy(SEA_LANTERN).luminance(state -> 15).strength(1.5F, 6F));
	public static final Block LIGHT_BLUE_BIOLUMINESCENT_BLOCK = new Block(Settings.copy(SEA_LANTERN).luminance(state -> 15).strength(1.5F, 6F));

	public static final Block DRITEAN = new Block(Settings.copy(DIRT));
	public static final Block GYLDELION_BLOCK = new Block(Settings.copy(IRON_BLOCK));
	public static final Block MOSOIL = new MosoilBlock(Settings.copy(GRASS_BLOCK));

	public static final Block BLACK_LILY = new TallFlowerBlock(Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block BLUE_POPPY = new FlowerBlock(NIGHT_VISION, 8, Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block BLUE_VIOLET = new FlowerBlock(RESISTANCE, 9, Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block BONNET_SPURGE = new FlowerBlock(POISON, 8, Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block BULLTHORN = new TallFlowerBlock(Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block CHOCOLATE_COSMOS_FLOWER = new FlowerBlock(COSMOS_BEAUTY, 14, Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block CYCAWLER = new StorceanFlowerBlock(CYCAWLER_BEAUTY, 24000, Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block GARDEN_PINKS = new FlowerBlock(FIRE_RESISTANCE, 6, Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block GYLDELION_FLOWER = new FlowerBlock(GLOWING, 12, Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block LIME_SPURGE = new TallFlowerBlock(Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block LUPIN_FLOWER = new TallFlowerBlock(Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block NATIVE_VIOLET = new FlowerBlock(RESISTANCE, 9, Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block OPIUM_POPPY = new FlowerBlock(WEAKNESS, 11, Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block ORANGE_LILY = new TallFlowerBlock(Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block PINK_BRAITOR_FLOWER = new FlowerBlock(BRAITOR_BEAUTY, 21, Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block PINK_ROSE = new FlowerBlock(FLOWER_BEAUTY, 13, Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block PINK_ROSE_BUSH = new FlowerBlock(FLOWER_BEAUTY, 13, Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block POPPY = new FlowerBlock(NIGHT_VISION, 5, Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block PURPROUND = new TallFlowerBlock(Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block RED_BRAITOR_FLOWER = new FlowerBlock(BRAITOR_BEAUTY, 21, Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block RED_CHOCOLATE_COSMOS_FLOWER = new FlowerBlock(COSMOS_BEAUTY, 14, Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block RED_ROSE = new FlowerBlock(FLOWER_BEAUTY, 13, Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block REEBLOON = new ReebloonBlock(Settings.of(Material.REPLACEABLE_PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block SPIKE_LAVENDER = new FlowerBlock(FLOWER_BEAUTY, 6, Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block SPRINLY = new TallFlowerBlock(Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block SPROOM_SPIKE = new SproomSpikeBlock(Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block SWEET_VIOLET = new FlowerBlock(RESISTANCE, 9, Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block TOPPED_LAVENDER = new FlowerBlock(FLOWER_BEAUTY, 6, Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block VASLAME = new StorceanFlowerBlock(FIRE_RESISTANCE, 6, Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block VELVET_LILY = new TallFlowerBlock(Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));
	public static final Block WEEPY_HOLLOWER = new StorceanFlowerBlock(GLOWING, 6, Settings.of(Material.PLANT).noCollision().breakInstantly().sounds(BlockSoundGroup.GRASS));

	public static final Block STASP_NEST = new StaspNestBlock(Settings.of(Material.WOOD).strength(2.0F).sounds(BlockSoundGroup.WOOD));

	public static final Block GIANT_VIOLET = new TallFlowerBlock(Settings.copy(RED_TULIP));
	public static final Block GIANT_VIOLET_LEAF = new Block(Settings.copy(COCOA));
	public static final Block GIANT_VIOLET_PETAL = new Block(Settings.copy(COCOA));
	public static final Block GIANT_VIOLET_PISTIL = new Block(Settings.copy(COCOA));
	public static final Block GIANT_VIOLET_STEAM = new PillarBlock(Settings.copy(COCOA));

	public static final Block DEAD_BLACKGREEN_TREE_CORAL = new ModDeadCoralBlock(Settings.copy(DEAD_TUBE_CORAL));
	public static final Block DEAD_BLACKGREEN_TREE_CORAL_BLOCK = new Block(Settings.copy(DEAD_TUBE_CORAL_BLOCK));
	public static final Block DEAD_BLACKGREEN_TREE_CORAL_FAN = new ModDeadCoralFanBlock(Settings.copy(DEAD_TUBE_CORAL_FAN));
	public static final Block DEAD_BLACKGREEN_TREE_CORAL_WALL_FAN = new ModDeadCoralWallFanBlock(Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	public static final Block BLACKGREEN_TREE_CORAL = new ModCoralBlock(DEAD_BLACKGREEN_TREE_CORAL, Settings.copy(TUBE_CORAL));
	public static final Block BLACKGREEN_TREE_CORAL_BLOCK = new CoralBlockBlock(DEAD_BLACKGREEN_TREE_CORAL_BLOCK, Settings.copy(TUBE_CORAL_BLOCK));
	public static final Block BLACKGREEN_TREE_CORAL_FAN = new ModCoralFanBlock(DEAD_BLACKGREEN_TREE_CORAL_FAN, Settings.copy(TUBE_CORAL_FAN));
	public static final Block BLACKGREEN_TREE_CORAL_WALL_FAN = new ModCoralWallFan(DEAD_BLACKGREEN_TREE_CORAL_WALL_FAN, Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	
	public static final Block DEAD_BROCCOLI_CORAL = new ModDeadCoralBlock(Settings.copy(DEAD_TUBE_CORAL));
	public static final Block DEAD_BROCCOLI_CORAL_BLOCK = new Block(Settings.copy(DEAD_TUBE_CORAL_BLOCK));
	public static final Block DEAD_BROCCOLI_CORAL_FAN = new ModDeadCoralFanBlock(Settings.copy(DEAD_TUBE_CORAL_FAN));
	public static final Block DEAD_BROCCOLI_CORAL_WALL_FAN = new ModDeadCoralWallFanBlock(Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	public static final Block BROCCOLI_CORAL = new ModCoralBlock(DEAD_BROCCOLI_CORAL, Settings.copy(TUBE_CORAL));
	public static final Block BROCCOLI_CORAL_BLOCK = new CoralBlockBlock(DEAD_BROCCOLI_CORAL_BLOCK, Settings.copy(TUBE_CORAL_BLOCK));
	public static final Block BROCCOLI_CORAL_FAN = new ModCoralFanBlock(DEAD_BROCCOLI_CORAL_FAN, Settings.copy(TUBE_CORAL_FAN));
	public static final Block BROCCOLI_CORAL_WALL_FAN = new ModCoralWallFan(DEAD_BROCCOLI_CORAL_WALL_FAN, Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));

	public static final Block DEAD_BUBBLEGUM_CORAL = new ModDeadCoralBlock(Settings.copy(DEAD_TUBE_CORAL));
	public static final Block DEAD_BUBBLEGUM_CORAL_BLOCK = new Block(Settings.copy(DEAD_TUBE_CORAL_BLOCK));
	public static final Block DEAD_BUBBLEGUM_CORAL_FAN = new ModDeadCoralFanBlock(Settings.copy(DEAD_TUBE_CORAL_FAN));
	public static final Block DEAD_BUBBLEGUM_CORAL_WALL_FAN = new ModDeadCoralWallFanBlock(Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	public static final Block BUBBLEGUM_CORAL = new ModCoralBlock(DEAD_BUBBLEGUM_CORAL, Settings.copy(TUBE_CORAL));
	public static final Block BUBBLEGUM_CORAL_BLOCK = new CoralBlockBlock(DEAD_BUBBLEGUM_CORAL_BLOCK, Settings.copy(TUBE_CORAL_BLOCK));
	public static final Block BUBBLEGUM_CORAL_FAN = new ModCoralFanBlock(DEAD_BUBBLEGUM_CORAL_FAN, Settings.copy(TUBE_CORAL_FAN));
	public static final Block BUBBLEGUM_CORAL_WALL_FAN = new ModCoralWallFan(DEAD_BUBBLEGUM_CORAL_WALL_FAN, Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));

	public static final Block DEAD_CABBAGE_TREE_CORAL = new ModDeadCoralBlock(Settings.copy(DEAD_TUBE_CORAL));
	public static final Block DEAD_CABBAGE_TREE_CORAL_BLOCK = new Block(Settings.copy(DEAD_TUBE_CORAL_BLOCK));
	public static final Block DEAD_CABBAGE_TREE_CORAL_FAN = new ModDeadCoralFanBlock(Settings.copy(DEAD_TUBE_CORAL_FAN));
	public static final Block DEAD_CABBAGE_TREE_CORAL_WALL_FAN = new ModDeadCoralWallFanBlock(Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	public static final Block CABBAGE_TREE_CORAL = new ModCoralBlock(DEAD_CABBAGE_TREE_CORAL, Settings.copy(TUBE_CORAL));
	public static final Block CABBAGE_TREE_CORAL_BLOCK = new CoralBlockBlock(DEAD_CABBAGE_TREE_CORAL_BLOCK, Settings.copy(TUBE_CORAL_BLOCK));
	public static final Block CABBAGE_TREE_CORAL_FAN = new ModCoralFanBlock(DEAD_CABBAGE_TREE_CORAL_FAN, Settings.copy(TUBE_CORAL_FAN));
	public static final Block CABBAGE_TREE_CORAL_WALL_FAN = new ModCoralWallFan(DEAD_CABBAGE_TREE_CORAL_WALL_FAN, Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	
	public static final Block DEAD_FLOWERTUBE_CORAL = new ModDeadCoralBlock(Settings.copy(DEAD_TUBE_CORAL));
	public static final Block DEAD_FLOWERTUBE_CORAL_BLOCK = new Block(Settings.copy(DEAD_TUBE_CORAL_BLOCK));
	public static final Block DEAD_FLOWERTUBE_CORAL_FAN = new ModDeadCoralFanBlock(Settings.copy(DEAD_TUBE_CORAL_FAN));
	public static final Block DEAD_FLOWERTUBE_CORAL_WALL_FAN = new ModDeadCoralWallFanBlock(Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	public static final Block FLOWERTUBE_CORAL = new ModCoralBlock(DEAD_FLOWERTUBE_CORAL, Settings.copy(TUBE_CORAL));
	public static final Block FLOWERTUBE_CORAL_BLOCK = new CoralBlockBlock(DEAD_FLOWERTUBE_CORAL_BLOCK, Settings.copy(TUBE_CORAL_BLOCK));
	public static final Block FLOWERTUBE_CORAL_FAN = new ModCoralFanBlock(DEAD_FLOWERTUBE_CORAL_FAN, Settings.copy(TUBE_CORAL_FAN));
	public static final Block FLOWERTUBE_CORAL_WALL_FAN = new ModCoralWallFan(DEAD_FLOWERTUBE_CORAL_WALL_FAN, Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	
	public static final Block DEAD_GARNET_SPIRAL_CORAL = new ModDeadCoralBlock(Settings.copy(DEAD_TUBE_CORAL));
	public static final Block DEAD_GARNET_SPIRAL_CORAL_BLOCK = new Block(Settings.copy(DEAD_TUBE_CORAL_BLOCK));
	public static final Block DEAD_GARNET_SPIRAL_CORAL_FAN = new ModDeadCoralFanBlock(Settings.copy(DEAD_TUBE_CORAL_FAN));
	public static final Block DEAD_GARNET_SPIRAL_CORAL_WALL_FAN = new ModDeadCoralWallFanBlock(Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	public static final Block GARNET_SPIRAL_CORAL = new ModCoralBlock(DEAD_GARNET_SPIRAL_CORAL, Settings.copy(TUBE_CORAL));
	public static final Block GARNET_SPIRAL_CORAL_BLOCK = new CoralBlockBlock(DEAD_GARNET_SPIRAL_CORAL_BLOCK, Settings.copy(TUBE_CORAL_BLOCK));
	public static final Block GARNET_SPIRAL_CORAL_FAN = new ModCoralFanBlock(DEAD_GARNET_SPIRAL_CORAL_FAN, Settings.copy(TUBE_CORAL_FAN));
	public static final Block GARNET_SPIRAL_CORAL_WALL_FAN = new ModCoralWallFan(DEAD_GARNET_SPIRAL_CORAL_WALL_FAN, Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	
	public static final Block DEAD_GLOW_FOREST_CORAL = new DeadTallCoralBlock(Settings.copy(DEAD_TUBE_CORAL));
	public static final Block DEAD_GLOW_FOREST_CORAL_BLOCK = new Block(Settings.copy(DEAD_TUBE_CORAL_BLOCK));
	public static final Block DEAD_GLOW_FOREST_CORAL_FAN = new ModDeadCoralFanBlock(Settings.copy(DEAD_TUBE_CORAL_FAN));
	public static final Block DEAD_GLOW_FOREST_CORAL_WALL_FAN = new ModDeadCoralWallFanBlock(Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	public static final Block GLOW_FOREST_CORAL = new TallCoralBlock(DEAD_GLOW_FOREST_CORAL, Settings.copy(TUBE_CORAL));
	public static final Block GLOW_FOREST_CORAL_BLOCK = new CoralBlockBlock(DEAD_GLOW_FOREST_CORAL_BLOCK, Settings.copy(TUBE_CORAL_BLOCK));
	public static final Block GLOW_FOREST_CORAL_FAN = new ModCoralFanBlock(DEAD_GLOW_FOREST_CORAL_FAN, Settings.copy(TUBE_CORAL_FAN));
	public static final Block GLOW_FOREST_CORAL_WALL_FAN = new ModCoralWallFan(DEAD_GLOW_FOREST_CORAL_WALL_FAN, Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	
	public static final Block DEAD_GLOWTONGUE_TUBE_CORAL = new ModDeadCoralBlock(Settings.copy(DEAD_TUBE_CORAL));
	public static final Block DEAD_GLOWTONGUE_TUBE_CORAL_BLOCK = new Block(Settings.copy(DEAD_TUBE_CORAL_BLOCK));
	public static final Block DEAD_GLOWTONGUE_TUBE_CORAL_FAN = new ModDeadCoralFanBlock(Settings.copy(DEAD_TUBE_CORAL_FAN));
	public static final Block DEAD_GLOWTONGUE_TUBE_CORA_WALL_FAN = new ModDeadCoralWallFanBlock(Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	public static final Block DEAD_GLOWTONGUE_TUBE_CORAL_WALL_FAN = new ModDeadCoralWallFanBlock(Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	public static final Block GLOWTONGUE_TUBE_CORAL = new ModCoralBlock(DEAD_GLOWTONGUE_TUBE_CORAL, Settings.copy(TUBE_CORAL));
	public static final Block GLOWTONGUE_TUBE_CORAL_BLOCK = new CoralBlockBlock(DEAD_GLOWTONGUE_TUBE_CORAL_BLOCK, Settings.copy(TUBE_CORAL_BLOCK));
	public static final Block GLOWTONGUE_TUBE_CORAL_FAN = new ModCoralFanBlock(DEAD_GLOWTONGUE_TUBE_CORAL_FAN, Settings.copy(TUBE_CORAL_FAN));
	public static final Block GLOWTONGUE_TUBE_CORAL_WALL_FAN = new ModCoralWallFan(DEAD_GLOWTONGUE_TUBE_CORA_WALL_FAN, Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	
	public static final Block DEAD_IVORY_CORAL = new ModDeadCoralBlock(Settings.copy(DEAD_TUBE_CORAL));
	public static final Block DEAD_IVORY_CORAL_BLOCK = new Block(Settings.copy(DEAD_TUBE_CORAL_BLOCK));
	public static final Block DEAD_IVORY_CORAL_FAN = new ModDeadCoralFanBlock(Settings.copy(DEAD_TUBE_CORAL_FAN));
	public static final Block DEAD_IVORY_CORAL_WALL_FAN = new ModDeadCoralWallFanBlock(Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	public static final Block IVORY_CORAL = new ModCoralBlock(DEAD_IVORY_CORAL, Settings.copy(TUBE_CORAL));
	public static final Block IVORY_CORAL_BLOCK = new CoralBlockBlock(DEAD_IVORY_CORAL_BLOCK, Settings.copy(TUBE_CORAL_BLOCK));
	public static final Block IVORY_CORAL_FAN = new ModCoralFanBlock(DEAD_IVORY_CORAL_FAN, Settings.copy(TUBE_CORAL_FAN));
	public static final Block IVORY_CORAL_WALL_FAN = new ModCoralWallFan(DEAD_IVORY_CORAL_WALL_FAN, Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	
	public static final Block DEAD_LIME_BRAIN_CORAL = new ModDeadCoralBlock(Settings.copy(DEAD_TUBE_CORAL));
	public static final Block DEAD_LIME_BRAIN_CORAL_BLOCK = new Block(Settings.copy(DEAD_TUBE_CORAL_BLOCK));
	public static final Block DEAD_LIME_BRAIN_CORAL_FAN = new ModDeadCoralFanBlock(Settings.copy(DEAD_TUBE_CORAL_FAN));
	public static final Block DEAD_LIME_BRAIN_CORAL_WALL_FAN = new ModDeadCoralWallFanBlock(Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	public static final Block LIME_BRAIN_CORAL = new ModCoralBlock(DEAD_LIME_BRAIN_CORAL, Settings.copy(TUBE_CORAL));
	public static final Block LIME_BRAIN_CORAL_BLOCK = new CoralBlockBlock(DEAD_LIME_BRAIN_CORAL_BLOCK, Settings.copy(TUBE_CORAL_BLOCK));
	public static final Block LIME_BRAIN_CORAL_FAN = new ModCoralFanBlock(DEAD_LIME_BRAIN_CORAL_FAN, Settings.copy(TUBE_CORAL_FAN));
	public static final Block LIME_BRAIN_CORAL_WALL_FAN = new ModCoralWallFan(DEAD_LIME_BRAIN_CORAL_WALL_FAN, Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	
	public static final Block DEAD_LOPHELIA_CORAL = new ModDeadCoralBlock(Settings.copy(DEAD_TUBE_CORAL));
	public static final Block DEAD_LOPHELIA_CORAL_BLOCK = new Block(Settings.copy(DEAD_TUBE_CORAL_BLOCK));
	public static final Block DEAD_LOPHELIA_CORAL_FAN = new ModDeadCoralFanBlock(Settings.copy(DEAD_TUBE_CORAL_FAN));
	public static final Block DEAD_LOPHELIA_CORAL_WALL_FAN = new ModDeadCoralWallFanBlock(Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	public static final Block LOPHELIA_CORAL = new ModCoralBlock(DEAD_LOPHELIA_CORAL, Settings.copy(TUBE_CORAL));
	public static final Block LOPHELIA_CORAL_BLOCK = new CoralBlockBlock(DEAD_LOPHELIA_CORAL_BLOCK, Settings.copy(TUBE_CORAL_BLOCK));
	public static final Block LOPHELIA_CORAL_FAN = new ModCoralFanBlock(DEAD_LOPHELIA_CORAL_FAN, Settings.copy(TUBE_CORAL_FAN));
	public static final Block LOPHELIA_CORAL_WALL_FAN = new ModCoralWallFan(DEAD_LOPHELIA_CORAL_WALL_FAN, Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
		
	public static final Block DEAD_PIPE_ORGAN_CORAL = new ModDeadCoralBlock(Settings.copy(DEAD_TUBE_CORAL));
	public static final Block DEAD_PIPE_ORGAN_CORAL_BLOCK = new Block(Settings.copy(DEAD_TUBE_CORAL_BLOCK));
	public static final Block DEAD_PIPE_ORGAN_CORAL_FAN = new ModDeadCoralFanBlock(Settings.copy(DEAD_TUBE_CORAL_FAN));
	public static final Block DEAD_PIPE_ORGAN_TENTACLES = new ModDeadCoralBlock(Settings.copy(DEAD_TUBE_CORAL));
	public static final Block DEAD_PIPE_ORGAN_CORAL_WALL_FAN = new ModDeadCoralWallFanBlock(Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	public static final Block PIPE_ORGAN_CORAL = new ModCoralBlock(DEAD_PIPE_ORGAN_CORAL, Settings.copy(TUBE_CORAL));
	public static final Block PIPE_ORGAN_CORAL_BLOCK = new CoralBlockBlock(DEAD_PIPE_ORGAN_CORAL_BLOCK, Settings.copy(TUBE_CORAL_BLOCK));
	public static final Block PIPE_ORGAN_CORAL_FAN = new ModCoralFanBlock(DEAD_PIPE_ORGAN_CORAL_FAN, Settings.copy(TUBE_CORAL_FAN));
	public static final Block PIPE_ORGAN_CORAL_WALL_FAN = new ModCoralWallFan(DEAD_PIPE_ORGAN_CORAL_WALL_FAN, Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	public static final Block PIPE_ORGAN_TENTACLES = new ModCoralBlock(DEAD_PIPE_ORGAN_TENTACLES, Settings.copy(TUBE_CORAL));
	
	public static final Block DEAD_RED_TREE_CORAL = new ModDeadCoralBlock(Settings.copy(DEAD_TUBE_CORAL));
	public static final Block DEAD_RED_TREE_CORAL_BLOCK = new Block(Settings.copy(DEAD_TUBE_CORAL_BLOCK));
	public static final Block DEAD_RED_TREE_CORAL_FAN = new ModDeadCoralFanBlock(Settings.copy(DEAD_TUBE_CORAL_FAN));
	public static final Block DEAD_RED_TREE_CORAL_WALL_FAN = new ModDeadCoralWallFanBlock(Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	public static final Block RED_TREE_CORAL = new ModCoralBlock(DEAD_RED_TREE_CORAL, Settings.copy(TUBE_CORAL));
	public static final Block RED_TREE_CORAL_BLOCK = new CoralBlockBlock(DEAD_RED_TREE_CORAL_BLOCK, Settings.copy(TUBE_CORAL_BLOCK));
	public static final Block RED_TREE_CORAL_FAN = new ModCoralFanBlock(DEAD_RED_TREE_CORAL_FAN, Settings.copy(TUBE_CORAL_FAN));
	public static final Block RED_TREE_CORAL_WALL_FAN = new ModCoralWallFan(DEAD_RED_TREE_CORAL_WALL_FAN, Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	
	public static final Block DEAD_SEAFAN_CORAL = new ModDeadCoralBlock(Settings.copy(DEAD_TUBE_CORAL));
	public static final Block DEAD_SEAFAN_CORAL_BLOCK = new Block(Settings.copy(DEAD_TUBE_CORAL_BLOCK));
	public static final Block DEAD_SEAFAN_CORAL_FAN = new ModDeadCoralFanBlock(Settings.copy(DEAD_TUBE_CORAL_FAN));
	public static final Block DEAD_SEAFAN_CORAL_WALL_FAN = new ModDeadCoralWallFanBlock(Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	public static final Block SEAFAN_CORAL = new ModCoralBlock(DEAD_SEAFAN_CORAL, Settings.copy(TUBE_CORAL));
	public static final Block SEAFAN_CORAL_BLOCK = new CoralBlockBlock(DEAD_SEAFAN_CORAL_BLOCK, Settings.copy(TUBE_CORAL_BLOCK));
	public static final Block SEAFAN_CORAL_FAN = new ModCoralFanBlock(DEAD_SEAFAN_CORAL_FAN, Settings.copy(TUBE_CORAL_FAN));
	public static final Block SEAFAN_CORAL_WALL_FAN = new ModCoralWallFan(DEAD_SEAFAN_CORAL_WALL_FAN, Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	
	public static final Block DEAD_STRAIGHT_WILLOW_CORAL = new ModDeadCoralBlock(Settings.copy(DEAD_TUBE_CORAL));
	public static final Block DEAD_STRAIGHT_WILLOW_CORAL_BLOCK = new Block(Settings.copy(DEAD_TUBE_CORAL_BLOCK));
	public static final Block DEAD_STRAIGHT_WILLOW_CORAL_FAN = new ModDeadCoralFanBlock(Settings.copy(DEAD_TUBE_CORAL_FAN));
	public static final Block DEAD_STRAIGHT_WILLOW_CORAL_WALL_FAN = new ModDeadCoralWallFanBlock(Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	public static final Block STRAIGHT_WILLOW_CORAL = new ModCoralBlock(DEAD_STRAIGHT_WILLOW_CORAL, Settings.copy(TUBE_CORAL));
	public static final Block STRAIGHT_WILLOW_CORAL_BLOCK = new CoralBlockBlock(DEAD_STRAIGHT_WILLOW_CORAL_BLOCK, Settings.copy(TUBE_CORAL_BLOCK));
	public static final Block STRAIGHT_WILLOW_CORAL_FAN = new ModCoralFanBlock(DEAD_STRAIGHT_WILLOW_CORAL_FAN, Settings.copy(TUBE_CORAL_FAN));
	public static final Block STRAIGHT_WILLOW_CORAL_WALL_FAN = new ModCoralWallFan(DEAD_STRAIGHT_WILLOW_CORAL_WALL_FAN, Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	
	public static final Block DEAD_SUNRISE_CORAL = new ModDeadCoralBlock(Settings.copy(DEAD_TUBE_CORAL));
	public static final Block DEAD_SUNRISE_CORAL_BLOCK = new Block(Settings.copy(DEAD_TUBE_CORAL_BLOCK));
	public static final Block DEAD_SUNRISE_CORAL_FAN = new ModDeadCoralFanBlock(Settings.copy(DEAD_TUBE_CORAL_FAN));
	public static final Block DEAD_SUNRISE_CORAL_WALL_FAN = new ModDeadCoralWallFanBlock(Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	public static final Block SUNRISE_CORAL = new ModCoralBlock(DEAD_SUNRISE_CORAL, Settings.copy(TUBE_CORAL));
	public static final Block SUNRISE_CORAL_BLOCK = new CoralBlockBlock(DEAD_SUNRISE_CORAL_BLOCK, Settings.copy(TUBE_CORAL_BLOCK));
	public static final Block SUNRISE_CORAL_FAN = new ModCoralFanBlock(DEAD_SUNRISE_CORAL_FAN, Settings.copy(TUBE_CORAL_FAN));
	public static final Block SUNRISE_CORAL_WALL_FAN = new ModCoralWallFan(DEAD_SUNRISE_CORAL_WALL_FAN, Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	
	public static final Block DEAD_TABLE_CORAL = new ModDeadCoralBlock(Settings.copy(DEAD_TUBE_CORAL));
	public static final Block DEAD_TABLE_CORAL_BLOCK = new Block(Settings.copy(DEAD_TUBE_CORAL_BLOCK));
	public static final Block DEAD_TABLE_CORAL_FAN = new ModDeadCoralFanBlock( Settings.copy(DEAD_TUBE_CORAL_FAN));
	public static final Block DEAD_TABLE_CORAL_WALL_FAN = new ModDeadCoralWallFanBlock( Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	public static final Block TABLE_CORAL = new ModCoralBlock(DEAD_TABLE_CORAL, Settings.copy(TUBE_CORAL));
	public static final Block TABLE_CORAL_BLOCK = new CoralBlockBlock(DEAD_TABLE_CORAL_BLOCK, Settings.copy(TUBE_CORAL_BLOCK));
	public static final Block TABLE_CORAL_FAN = new ModCoralFanBlock(DEAD_TABLE_CORAL_FAN, Settings.copy(TUBE_CORAL_FAN));
	public static final Block TABLE_CORAL_WALL_FAN = new ModCoralWallFan(DEAD_TABLE_CORAL_WALL_FAN, Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	
	public static final Block DEAD_THIN_BLADE_CORAL = new ModDeadCoralBlock(Settings.copy(DEAD_TUBE_CORAL));
	public static final Block DEAD_THIN_BLADE_CORAL_BLOCK = new Block(Settings.copy(DEAD_TUBE_CORAL_BLOCK));
	public static final Block DEAD_THIN_BLADE_CORAL_FAN = new ModDeadCoralFanBlock(Settings.copy(DEAD_TUBE_CORAL_FAN));
	public static final Block DEAD_THIN_BLADE_CORAL_WALL_FAN = new ModDeadCoralWallFanBlock(Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	public static final Block THIN_BLADE_CORAL = new ModCoralBlock(DEAD_THIN_BLADE_CORAL, Settings.copy(TUBE_CORAL));
	public static final Block THIN_BLADE_CORAL_BLOCK = new CoralBlockBlock(DEAD_THIN_BLADE_CORAL_BLOCK, Settings.copy(TUBE_CORAL_BLOCK));
	public static final Block THIN_BLADE_CORAL_FAN = new ModCoralFanBlock(DEAD_THIN_BLADE_CORAL_FAN, Settings.copy(TUBE_CORAL_FAN));
	public static final Block THIN_BLADE_CORAL_WALL_FAN = new ModCoralWallFan(DEAD_THIN_BLADE_CORAL_WALL_FAN, Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	
	public static final Block DEAD_TRUMPETEAR_CORAL = new ModDeadCoralBlock(Settings.copy(DEAD_TUBE_CORAL));
	public static final Block DEAD_TRUMPETEAR_CORAL_BLOCK = new Block(Settings.copy(DEAD_TUBE_CORAL_BLOCK));
	public static final Block DEAD_TRUMPETEAR_CORAL_FAN = new ModDeadCoralFanBlock(Settings.copy(DEAD_TUBE_CORAL_FAN));
	public static final Block DEAD_TRUMPETEAR_CORAL_WALL_FAN = new ModDeadCoralWallFanBlock(Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));
	public static final Block TRUMPETEAR_CORAL = new ModCoralBlock(DEAD_TRUMPETEAR_CORAL, Settings.copy(TUBE_CORAL));
	public static final Block TRUMPETEAR_CORAL_BLOCK = new CoralBlockBlock(DEAD_TRUMPETEAR_CORAL_BLOCK, Settings.copy(TUBE_CORAL_BLOCK));
	public static final Block TRUMPETEAR_CORAL_FAN = new ModCoralFanBlock(DEAD_TRUMPETEAR_CORAL_FAN, Settings.copy(TUBE_CORAL_FAN));
	public static final Block TRUMPETEAR_CORAL_WALL_FAN = new ModCoralWallFan(DEAD_TRUMPETEAR_CORAL_WALL_FAN, Settings.copy(DEAD_TUBE_CORAL_WALL_FAN));

	public static final Block ALMOND_BUTTON = new ModWoodButtonBlock(Settings.copy(OAK_BUTTON));
	public static final Block ALMOND_DOOR = new ModDoorBlock(Settings.copy(OAK_DOOR));
	public static final Block ALMOND_FENCE = new FenceBlock(Settings.copy(OAK_FENCE));
	public static final Block ALMOND_FENCE_GATE = new FenceGateBlock(Settings.copy(OAK_FENCE_GATE));
	public static final Block ALMOND_LEAVES = new LeavesBlock(Settings.copy(OAK_LEAVES));
	public static final Block ALMOND_LOG = new PillarBlock(Settings.copy(OAK_LOG));
	public static final Block ALMOND_PLANKS = new Block(Settings.copy(OAK_PLANKS));
	public static final Block ALMOND_PRESSURE_PLATE = new ModPressurePlateBlock(EVERYTHING, Settings.copy(OAK_PRESSURE_PLATE));
	public static final Block ALMOND_SAPLING = new FeaturesSaplingBlock(ALMOND_SAPLING, Settings.copy(OAK_SAPLING));
	public static final Block ALMOND_SIGN = new ModSignBlock(Settings.copy(OAK_SIGN), SignTypes.ALMOND);
	public static final Block ALMOND_SLAB = new SlabBlock(Settings.copy(OAK_SLAB));
	public static final Block ALMOND_STAIRS = new ModStairsBlock(ALMOND_PLANKS.getDefaultState(), Settings.copy(OAK_STAIRS));
	public static final Block ALMOND_TRAPDOOR = new ModTrapdoorBlock(Settings.copy(OAK_TRAPDOOR));
	public static final Block ALMOND_WALL_SIGN = new ModWallSignBlock(Settings.copy(OAK_WALL_SIGN), SignTypes.ALMOND);
	public static final Block ALMOND_WOOD = new PillarBlock(Settings.copy(OAK_WOOD));
	
	public static final Block ANAMEATA_BUTTON = new ModWoodButtonBlock(Settings.copy(OAK_BUTTON));
	public static final Block ANAMEATA_CAP = new CapBlock(Settings.of(FUNGUS).strength(0.2F, 0.2F));
	public static final Block ANAMEATA_DOOR = new ModDoorBlock(Settings.copy(OAK_DOOR));
	public static final Block ANAMEATA_FENCE = new FenceBlock(Settings.copy(OAK_FENCE));
	public static final Block ANAMEATA_FENCE_GATE = new FenceGateBlock(Settings.copy(OAK_FENCE_GATE));
	public static final Block ANAMEATA_LOG = new PillarBlock(Settings.copy(OAK_LOG));
	public static final Block ANAMEATA_PLANKS = new Block(Settings.copy(OAK_PLANKS));
	public static final Block ANAMEATA_PRESSURE_PLATE = new ModPressurePlateBlock(EVERYTHING, Settings.copy(OAK_PRESSURE_PLATE));
	public static final Block ANAMEATA_SAPLING = new FeaturesSaplingBlock(ANAMEATA,SAPLING, Settings.of(FUNGUS).strength(0, 0));
	public static final Block ANAMEATA_SIGN = new ModSignBlock(Settings.copy(OAK_SIGN), SignTypes.ANAMEATA);
	public static final Block ANAMEATA_SLAB = new SlabBlock(Settings.copy(OAK_SLAB));
	public static final Block ANAMEATA_STAIRS = new ModStairsBlock(ANAMEATA_PLANKS.getDefaultState(), Settings.copy(OAK_STAIRS));
	public static final Block ANAMEATA_TRAPDOOR = new ModTrapdoorBlock(Settings.copy(OAK_TRAPDOOR));
	public static final Block ANAMEATA_WALL_SIGN = new ModWallSignBlock(Settings.copy(OAK_SIGN), SignTypes.ANAMEATA);
	public static final Block ANAMEATA_WOOD = new PillarBlock(Settings.copy(OAK_WOOD));
	
	public static final Block AQUEAN_BUTTON = new ModWoodButtonBlock(Settings.copy(OAK_BUTTON));
	public static final Block AQUEAN_DOOR = new ModDoorBlock(Settings.copy(OAK_DOOR));
	public static final Block AQUEAN_FENCE = new FenceBlock(Settings.copy(OAK_FENCE));
	public static final Block AQUEAN_FENCE_GATE = new FenceGateBlock(Settings.copy(OAK_FENCE_GATE));
	public static final Block AQUEAN_LEAVES = new LeavesBlock(Settings.copy(OAK_LEAVES));
	public static final Block AQUEAN_LOG = new PillarBlock(Settings.copy(OAK_LOG));
	public static final Block AQUEAN_PLANKS = new Block(Settings.copy(OAK_PLANKS));
	public static final Block AQUEAN_PRESSURE_PLATE = new ModPressurePlateBlock(EVERYTHING, Settings.copy(OAK_PRESSURE_PLATE));
	public static final Block AQUEAN_SAPLING = new StorceanSaplingBlock(AQUEAN_SAPLING, Settings.copy(OAK_SAPLING));
	public static final Block AQUEAN_SIGN = new ModSignBlock(Settings.copy(OAK_SIGN), SignTypes.AQUEAN);
	public static final Block AQUEAN_SLAB = new SlabBlock(Settings.copy(OAK_SLAB));
	public static final Block AQUEAN_STAIRS = new ModStairsBlock(AQUEAN_PLANKS.getDefaultState(), Settings.copy(OAK_STAIRS));
	public static final Block AQUEAN_TRAPDOOR = new ModTrapdoorBlock(Settings.copy(OAK_TRAPDOOR));
	public static final Block AQUEAN_WALL_SIGN = new ModWallSignBlock(Settings.copy(OAK_SIGN), SignTypes.AQUEAN);
	public static final Block AQUEAN_WOOD = new PillarBlock(Settings.copy(OAK_WOOD));
	
	public static final Block BARSHROOKLE_BUTTON = new ModWoodButtonBlock(Settings.copy(OAK_BUTTON));
	public static final Block BARSHROOKLE_CAP = new CapBlock(Settings.of(FUNGUS).strength(0.2F, 0.2F));
	public static final Block BARSHROOKLE_DOOR = new ModDoorBlock(Settings.copy(OAK_DOOR));
	public static final Block BARSHROOKLE_FENCE = new FenceBlock(Settings.copy(OAK_FENCE));
	public static final Block BARSHROOKLE_FENCE_GATE = new FenceGateBlock(Settings.copy(OAK_FENCE_GATE));
	public static final Block BARSHROOKLE_LOG = new PillarBlock(Settings.copy(OAK_LOG));
	public static final Block BARSHROOKLE_PLANKS = new Block(Settings.copy(OAK_PLANKS));
	public static final Block BARSHROOKLE_PRESSURE_PLATE = new ModPressurePlateBlock(EVERYTHING, Settings.copy(OAK_PRESSURE_PLATE));
	public static final Block BARSHROOKLE_SAPLING = new FungusBlock(BARSHROOKLE_SAPLING, Settings.of(FUNGUS).strength(0, 0));
	public static final Block BARSHROOKLE_SIGN = new ModSignBlock(Settings.copy(OAK_SIGN), SignTypes.BARSHROOKLE);
	public static final Block BARSHROOKLE_SLAB = new SlabBlock(Settings.copy(OAK_SLAB));
	public static final Block BARSHROOKLE_STAIRS = new ModStairsBlock(BARSHROOKLE_PLANKS.getDefaultState(), Settings.copy(OAK_STAIRS));
	public static final Block BARSHROOKLE_TRAPDOOR = new ModTrapdoorBlock(Settings.copy(OAK_TRAPDOOR));
	public static final Block BARSHROOKLE_WALL_SIGN = new ModWallSignBlock(Settings.copy(OAK_SIGN), SignTypes.BARSHROOKLE);
	public static final Block BARSHROOKLE_WOOD = new PillarBlock(Settings.copy(OAK_WOOD));
	
	public static final Block BLACK_BIRCH_BUTTON = new ModWoodButtonBlock(Settings.copy(OAK_BUTTON));
	public static final Block BLACK_BIRCH_DOOR = new ModDoorBlock(Settings.copy(OAK_DOOR));
	public static final Block BLACK_BIRCH_FENCE = new FenceBlock(Settings.copy(OAK_FENCE));
	public static final Block BLACK_BIRCH_FENCE_GATE = new FenceGateBlock(Settings.copy(OAK_FENCE_GATE));
	public static final Block BLACK_BIRCH_LEAVES = new LeavesBlock(Settings.copy(OAK_LEAVES));
	public static final Block BLACK_BIRCH_LOG = new PillarBlock(Settings.copy(OAK_LOG));
	public static final Block BLACK_BIRCH_PLANKS = new Block(Settings.copy(OAK_PLANKS));
	public static final Block BLACK_BIRCH_PRESSURE_PLATE = new ModPressurePlateBlock(EVERYTHING, Settings.copy(OAK_PRESSURE_PLATE));
	public static final Block BLACK_BIRCH_SAPLING = new FeaturesSaplingBlock(BLACK_BIRCH_SAPLING, Settings.copy(OAK_SAPLING));
	public static final Block BLACK_BIRCH_SIGN = new ModSignBlock(Settings.copy(OAK_SIGN), SignTypes.BLACK_BIRCH);
	public static final Block BLACK_BIRCH_SLAB = new SlabBlock(Settings.copy(OAK_SLAB));
	public static final Block BLACK_BIRCH_STAIRS = new ModStairsBlock(BLACK_BIRCH_PLANKS.getDefaultState(), Settings.copy(OAK_STAIRS));
	public static final Block BLACK_BIRCH_TRAPDOOR = new ModTrapdoorBlock(Settings.copy(OAK_TRAPDOOR));
	public static final Block BLACK_BIRCH_WALL_SIGN = new ModWallSignBlock(Settings.copy(OAK_SIGN), SignTypes.BLACK_BIRCH);
	public static final Block BLACK_BIRCH_WOOD = new PillarBlock(Settings.copy(OAK_WOOD));
	
	public static final Block CHERRY_BUTTON = new ModWoodButtonBlock(Settings.copy(OAK_BUTTON));
	public static final Block CHERRY_DOOR = new ModDoorBlock(Settings.copy(OAK_DOOR));
	public static final Block CHERRY_FENCE = new FenceBlock(Settings.copy(OAK_FENCE));
	public static final Block CHERRY_FENCE_GATE = new FenceGateBlock(Settings.copy(OAK_FENCE_GATE));
	public static final Block CHERRY_LEAVES = new LeavesBlock(Settings.copy(OAK_LEAVES));
	public static final Block CHERRY_LOG = new PillarBlock(Settings.copy(OAK_LOG));
	public static final Block CHERRY_PLANKS = new Block(Settings.copy(OAK_PLANKS));
	public static final Block CHERRY_PRESSURE_PLATE = new ModPressurePlateBlock(EVERYTHING, Settings.copy(OAK_PRESSURE_PLATE));
	public static final Block CHERRY_SAPLING = new FeaturesSaplingBlock(CHERRY_SAPLING, Settings.copy(OAK_SAPLING));
	public static final Block CHERRY_SIGN = new ModSignBlock(Settings.copy(OAK_SIGN), SignTypes.CHERRY);
	public static final Block CHERRY_SLAB = new SlabBlock(Settings.copy(OAK_SLAB));
	public static final Block CHERRY_STAIRS = new ModStairsBlock(CHERRY_PLANKS.getDefaultState(), Settings.copy(OAK_STAIRS));
	public static final Block CHERRY_TRAPDOOR = new ModTrapdoorBlock(Settings.copy(OAK_TRAPDOOR));
	public static final Block CHERRY_WALL_SIGN = new ModWallSignBlock(Settings.copy(OAK_SIGN), SignTypes.CHERRY);
	public static final Block CHERRY_WOOD = new PillarBlock(Settings.copy(OAK_WOOD));
	
	public static final Block COOK_PINE_BUTTON = new ModWoodButtonBlock(Settings.copy(OAK_BUTTON));
	public static final Block COOK_PINE_DOOR = new ModDoorBlock(Settings.copy(OAK_DOOR));
	public static final Block COOK_PINE_FENCE = new FenceBlock(Settings.copy(OAK_FENCE));
	public static final Block COOK_PINE_FENCE_GATE = new FenceGateBlock(Settings.copy(OAK_FENCE_GATE));
	public static final Block COOK_PINE_LEAVES = new LeavesBlock(Settings.copy(OAK_LEAVES));
	public static final Block COOK_PINE_LOG = new PillarBlock(Settings.copy(OAK_LOG));
	public static final Block COOK_PINE_PLANKS = new Block(Settings.copy(OAK_PLANKS));
	public static final Block COOK_PINE_PRESSURE_PLATE = new ModPressurePlateBlock(EVERYTHING, Settings.copy(OAK_PRESSURE_PLATE));
	public static final Block COOK_PINE_SAPLING = new FeaturesSaplingBlock(COOK_PINE_SAPLING, Settings.copy(OAK_SAPLING));
	public static final Block COOK_PINE_SIGN = new ModSignBlock(Settings.copy(OAK_SIGN), SignTypes.COOK_PINE);
	public static final Block COOK_PINE_SLAB = new SlabBlock(Settings.copy(OAK_SLAB));
	public static final Block COOK_PINE_STAIRS = new ModStairsBlock(COOK_PINE_PLANKS.getDefaultState(), Settings.copy(OAK_STAIRS));
	public static final Block COOK_PINE_TRAPDOOR = new ModTrapdoorBlock(Settings.copy(OAK_TRAPDOOR));
	public static final Block COOK_PINE_WALL_SIGN = new ModWallSignBlock(Settings.copy(OAK_SIGN), SignTypes.COOK_PINE);
	public static final Block COOK_PINE_WOOD = new PillarBlock(Settings.copy(OAK_WOOD));
	
	public static final Block CROLOOD_BUTTON = new ModWoodButtonBlock(Settings.copy(OAK_BUTTON));
	public static final Block CROLOOD_DOOR = new ModDoorBlock(Settings.copy(OAK_DOOR));
	public static final Block CROLOOD_FENCE = new FenceBlock(Settings.copy(OAK_FENCE));
	public static final Block CROLOOD_FENCE_GATE = new FenceGateBlock(Settings.copy(OAK_FENCE_GATE));
	public static final Block CROLOOD_LEAVES = new LeavesBlock(Settings.copy(OAK_LEAVES));
	public static final Block CROLOOD_LOG = new PillarBlock(Settings.copy(OAK_LOG));
	public static final Block CROLOOD_PLANKS = new Block(Settings.copy(OAK_PLANKS));
	public static final Block CROLOOD_PRESSURE_PLATE = new ModPressurePlateBlock(EVERYTHING, Settings.copy(OAK_PRESSURE_PLATE));
	public static final Block CROLOOD_SAPLING = new StorceanSaplingBlock(CROLOOD_SAPLING, Settings.copy(OAK_SAPLING));
	public static final Block CROLOOD_SIGN = new ModSignBlock(Settings.copy(OAK_SIGN), SignTypes.CROLOOD);
	public static final Block CROLOOD_SLAB = new SlabBlock(Settings.copy(OAK_SLAB));
	public static final Block CROLOOD_STAIRS = new ModStairsBlock(CROLOOD_PLANKS.getDefaultState(), Settings.copy(OAK_STAIRS));
	public static final Block CROLOOD_TRAPDOOR = new ModTrapdoorBlock(Settings.copy(OAK_TRAPDOOR));
	public static final Block CROLOOD_WALL_SIGN = new ModWallSignBlock(Settings.copy(OAK_SIGN), SignTypes.CROLOOD);
	public static final Block CROLOOD_WOOD = new PillarBlock(Settings.copy(OAK_WOOD));
		
	public static final Block DARK_CROLOOD_BUTTON = new ModWoodButtonBlock(Settings.copy(OAK_BUTTON));
	public static final Block DARK_CROLOOD_DOOR = new ModDoorBlock(Settings.copy(OAK_DOOR));
	public static final Block DARK_CROLOOD_FENCE = new FenceBlock(Settings.copy(OAK_FENCE));
	public static final Block DARK_CROLOOD_FENCE_GATE = new FenceGateBlock(Settings.copy(OAK_FENCE_GATE));
	public static final Block DARK_CROLOOD_LEAVES = new LeavesBlock(Settings.copy(OAK_LEAVES));
	public static final Block DARK_CROLOOD_LOG = new PillarBlock(Settings.copy(OAK_LOG));
	public static final Block DARK_CROLOOD_PLANKS = new Block(Settings.copy(OAK_PLANKS));
	public static final Block DARK_CROLOOD_PRESSURE_PLATE = new ModPressurePlateBlock(EVERYTHING, Settings.copy(OAK_PRESSURE_PLATE));
	public static final Block DARK_CROLOOD_SAPLING = new FeaturesSaplingBlock(DARK_CROLOOD_SAPLING, Settings.copy(OAK_SAPLING));
	public static final Block DARK_CROLOOD_SIGN = new ModSignBlock(Settings.copy(OAK_SIGN), SignTypes.DARK_CROLOOD);
	public static final Block DARK_CROLOOD_SLAB = new SlabBlock(Settings.copy(OAK_SLAB));
	public static final Block DARK_CROLOOD_STAIRS = new ModStairsBlock(DARK_CROLOOD_PLANKS.getDefaultState(), Settings.copy(OAK_STAIRS));
	public static final Block DARK_CROLOOD_TRAPDOOR = new ModTrapdoorBlock(Settings.copy(OAK_TRAPDOOR));
	public static final Block DARK_CROLOOD_WALL_SIGN = new ModWallSignBlock(Settings.copy(OAK_SIGN), SignTypes.DARK_CROLOOD);
	public static final Block DARK_CROLOOD_WOOD = new PillarBlock(Settings.copy(OAK_WOOD));
		
	public static final Block EBONY_BUTTON = new ModWoodButtonBlock(Settings.copy(OAK_BUTTON));
	public static final Block EBONY_DOOR = new ModDoorBlock(Settings.copy(OAK_DOOR));
	public static final Block EBONY_FENCE = new FenceBlock(Settings.copy(OAK_FENCE));
	public static final Block EBONY_FENCE_GATE = new FenceGateBlock(Settings.copy(OAK_FENCE_GATE));
	public static final Block EBONY_LEAVES = new LeavesBlock(Settings.copy(OAK_LEAVES));
	public static final Block EBONY_LOG = new PillarBlock(Settings.copy(OAK_LOG));
	public static final Block EBONY_PLANKS = new Block(Settings.copy(OAK_PLANKS));
	public static final Block EBONY_PRESSURE_PLATE = new ModPressurePlateBlock(EVERYTHING, Settings.copy(OAK_PRESSURE_PLATE));
	public static final Block EBONY_SAPLING = new FeaturesSaplingBlock(EBONY_SAPLING, Settings.copy(OAK_SAPLING));
	public static final Block EBONY_SIGN = new ModSignBlock(Settings.copy(OAK_SIGN), SignTypes.EBONY);
	public static final Block EBONY_SLAB = new SlabBlock(Settings.copy(OAK_SLAB));
	public static final Block EBONY_STAIRS = new ModStairsBlock(EBONY_PLANKS.getDefaultState(), Settings.copy(OAK_STAIRS));
	public static final Block EBONY_TRAPDOOR = new ModTrapdoorBlock(Settings.copy(OAK_TRAPDOOR));
	public static final Block EBONY_WALL_SIGN = new ModWallSignBlock(Settings.copy(OAK_SIGN), SignTypes.EBONY);
	public static final Block EBONY_WOOD = new PillarBlock(Settings.copy(OAK_WOOD));
	
	public static final Block FUCHSITRA_BUTTON = new ModWoodButtonBlock(Settings.copy(OAK_BUTTON));
	public static final Block FUCHSITRA_DOOR = new ModDoorBlock(Settings.copy(OAK_DOOR));
	public static final Block FUCHSITRA_FENCE = new FenceBlock(Settings.copy(OAK_FENCE));
	public static final Block FUCHSITRA_FENCE_GATE = new FenceGateBlock(Settings.copy(OAK_FENCE_GATE));
	public static final Block FUCHSITRA_LEAVES = new LeavesBlock(Settings.copy(OAK_LEAVES));
	public static final Block FUCHSITRA_LOG = new PillarBlock(Settings.copy(OAK_LOG));
	public static final Block FUCHSITRA_PLANKS = new Block(Settings.copy(OAK_PLANKS));
	public static final Block FUCHSITRA_PRESSURE_PLATE = new ModPressurePlateBlock(EVERYTHING, Settings.copy(OAK_PRESSURE_PLATE));
	public static final Block FUCHSITRA_SAPLING = new StorceanSaplingBlock(FUCHSITRA_SAPLING, Settings.copy(OAK_SAPLING));
	public static final Block FUCHSITRA_SIGN = new ModSignBlock(Settings.copy(OAK_SIGN), SignTypes.FUCHSITRA);
	public static final Block FUCHSITRA_SLAB = new SlabBlock(Settings.copy(OAK_SLAB));
	public static final Block FUCHSITRA_STAIRS = new ModStairsBlock(FUCHSITRA_PLANKS.getDefaultState(), Settings.copy(OAK_STAIRS));
	public static final Block FUCHSITRA_TRAPDOOR = new ModTrapdoorBlock(Settings.copy(OAK_TRAPDOOR));
	public static final Block FUCHSITRA_WALL_SIGN = new ModWallSignBlock(Settings.copy(OAK_SIGN), SignTypes.FUCHSITRA);
	public static final Block FUCHSITRA_WOOD = new PillarBlock(Settings.copy(OAK_WOOD));
	
	public static final Block FUNERANITE_BUTTON = new ModWoodButtonBlock(Settings.copy(OAK_BUTTON));
	public static final Block FUNERANITE_CAP = new CapBlock(Settings.of(FUNGUS).strength(0.2F, 0.2F));
	public static final Block FUNERANITE_DOOR = new ModDoorBlock(Settings.copy(OAK_DOOR));
	public static final Block FUNERANITE_FENCE = new FenceBlock(Settings.copy(OAK_FENCE));
	public static final Block FUNERANITE_FENCE_GATE = new FenceGateBlock(Settings.copy(OAK_FENCE_GATE));
	public static final Block FUNERANITE_LOG = new PillarBlock(Settings.copy(OAK_LOG));
	public static final Block FUNERANITE_PLANKS = new Block(Settings.copy(OAK_PLANKS));
	public static final Block FUNERANITE_PRESSURE_PLATE = new ModPressurePlateBlock(EVERYTHING, Settings.copy(OAK_PRESSURE_PLATE));
	public static final Block FUNERANITE_SAPLING = new StorceanSaplingBlock(FUNERANITE_SAPLING, Settings.copy(OAK_SAPLING));
	public static final Block FUNERANITE_SIGN = new ModSignBlock(Settings.copy(OAK_SIGN), SignTypes.FUNERANITE);
	public static final Block FUNERANITE_SLAB = new SlabBlock(Settings.copy(OAK_SLAB));
	public static final Block FUNERANITE_STAIRS = new ModStairsBlock(FUNERANITE_PLANKS.getDefaultState(), Settings.copy(OAK_STAIRS));
	public static final Block FUNERANITE_TRAPDOOR = new ModTrapdoorBlock(Settings.copy(OAK_TRAPDOOR));
	public static final Block FUNERANITE_WALL_SIGN = new ModWallSignBlock(Settings.copy(OAK_SIGN), SignTypes.FUNERANITE);
	public static final Block FUNERANITE_WOOD = new PillarBlock(Settings.copy(OAK_WOOD));
	
	public static final Block GHOSHROOM_BUTTON = new ModWoodButtonBlock(Settings.copy(OAK_BUTTON));
	public static final Block GHOSHROOM_CAP = new CapBlock(Settings.of(FUNGUS).strength(0.2F, 0.2F));
	public static final Block GHOSHROOM_DOOR = new ModDoorBlock(Settings.copy(OAK_DOOR));
	public static final Block GHOSHROOM_FENCE = new FenceBlock(Settings.copy(OAK_FENCE));
	public static final Block GHOSHROOM_FENCE_GATE = new FenceGateBlock(Settings.copy(OAK_FENCE_GATE));
	public static final Block GHOSHROOM_LOG = new PillarBlock(Settings.copy(OAK_LOG));
	public static final Block GHOSHROOM_PLANKS = new Block(Settings.copy(OAK_PLANKS));
	public static final Block GHOSHROOM_PRESSURE_PLATE = new ModPressurePlateBlock(EVERYTHING, Settings.copy(OAK_PRESSURE_PLATE));
	public static final Block GHOSHROOM_SAPLING = new FeaturesSaplingBlock(GHOSHROOM_SAPLING, Settings.copy(OAK_SAPLING));
	public static final Block GHOSHROOM_SIGN = new ModSignBlock(Settings.copy(OAK_SIGN), SignTypes.GHOSHROOM);
	public static final Block GHOSHROOM_SLAB = new SlabBlock(Settings.copy(OAK_SLAB));
	public static final Block GHOSHROOM_STAIRS = new ModStairsBlock(GHOSHROOM_PLANKS.getDefaultState(), Settings.copy(OAK_STAIRS));
	public static final Block GHOSHROOM_TRAPDOOR = new ModTrapdoorBlock(Settings.copy(OAK_TRAPDOOR));
	public static final Block GHOSHROOM_WALL_SIGN = new ModWallSignBlock(Settings.copy(OAK_SIGN), SignTypes.GHOSHROOM);
	public static final Block GHOSHROOM_WOOD = new PillarBlock(Settings.copy(OAK_WOOD));

	public static final Block MURKANTUAN_BUTTON = new ModWoodButtonBlock(Settings.copy(OAK_BUTTON));
	public static final Block MURKANTUAN_DOOR = new ModDoorBlock(Settings.copy(OAK_DOOR));
	public static final Block MURKANTUAN_FENCE = new FenceBlock(Settings.copy(OAK_FENCE));
	public static final Block MURKANTUAN_FENCE_GATE = new FenceGateBlock(Settings.copy(OAK_FENCE_GATE));
	public static final Block MURKANTUAN_LEAVES = new LeavesBlock(Settings.copy(OAK_LEAVES));
	public static final Block MURKANTUAN_FLOWER = new Block(Settings.copy(SWEET_BERRY_BUSH));
	public static final Block MURKANTUAN_LOG = new PillarBlock(Settings.copy(OAK_LOG));
	public static final Block MURKANTUAN_PLANKS = new Block(Settings.copy(OAK_PLANKS));
	public static final Block MURKANTUAN_PRESSURE_PLATE = new ModPressurePlateBlock(EVERYTHING, Settings.copy(OAK_PRESSURE_PLATE));
	public static final Block MURKANTUAN_SAPLING = new FeaturesSaplingBlock(MURKANTUAN_SAPLING, Settings.copy(OAK_SAPLING));
	public static final Block MURKANTUAN_SIGN = new ModSignBlock(Settings.copy(OAK_SIGN), SignTypes.MURKANTUAN);
	public static final Block MURKANTUAN_SLAB = new SlabBlock(Settings.copy(OAK_SLAB));
	public static final Block MURKANTUAN_STAIRS = new ModStairsBlock(MURKANTUAN_PLANKS.getDefaultState(), Settings.copy(OAK_STAIRS));
	public static final Block MURKANTUAN_TRAPDOOR = new ModTrapdoorBlock(Settings.copy(OAK_TRAPDOOR));
	public static final Block MURKANTUAN_WALL_SIGN = new ModWallSignBlock(Settings.copy(OAK_SIGN), SignTypes.THUNDERCLOUD_PLUM);
	public static final Block MURKANTUAN_WOOD = new PillarBlock(Settings.copy(OAK_WOOD));
		
	public static final Block PELTOGYNE_BUTTON = new ModWoodButtonBlock(Settings.copy(OAK_BUTTON));
	public static final Block PELTOGYNE_DOOR = new ModDoorBlock(Settings.copy(OAK_DOOR));
	public static final Block PELTOGYNE_FENCE = new FenceBlock(Settings.copy(OAK_FENCE));
	public static final Block PELTOGYNE_FENCE_GATE = new FenceGateBlock(Settings.copy(OAK_FENCE_GATE));
	public static final Block PELTOGYNE_LEAVES = new LeavesBlock(Settings.copy(OAK_LEAVES));
	public static final Block PELTOGYNE_LOG = new PillarBlock(Settings.copy(OAK_LOG));
	public static final Block PELTOGYNE_PLANKS = new Block(Settings.copy(OAK_PLANKS));
	public static final Block PELTOGYNE_PRESSURE_PLATE = new ModPressurePlateBlock(EVERYTHING, Settings.copy(OAK_PRESSURE_PLATE));
	public static final Block PELTOGYNE_SAPLING = new FeaturesSaplingBlock(PELTOGYNE_SAPLING, Settings.copy(OAK_SAPLING));
	public static final Block PELTOGYNE_SIGN = new ModSignBlock(Settings.copy(OAK_SIGN), SignTypes.PELTOGYNE);
	public static final Block PELTOGYNE_SLAB = new SlabBlock(Settings.copy(OAK_SLAB));
	public static final Block PELTOGYNE_STAIRS = new ModStairsBlock(PELTOGYNE_PLANKS.getDefaultState(), Settings.copy(OAK_STAIRS));
	public static final Block PELTOGYNE_TRAPDOOR = new ModTrapdoorBlock(Settings.copy(OAK_TRAPDOOR));
	public static final Block PELTOGYNE_WALL_SIGN = new ModWallSignBlock(Settings.copy(OAK_SIGN), SignTypes.PELTOGYNE);
	public static final Block PELTOGYNE_WOOD = new PillarBlock(Settings.copy(OAK_WOOD));
	
	public static final Block PIN_CHERRY_BUTTON = new ModWoodButtonBlock(Settings.copy(OAK_BUTTON));
	public static final Block PIN_CHERRY_DOOR = new ModDoorBlock(Settings.copy(OAK_DOOR));
	public static final Block PIN_CHERRY_FENCE = new FenceBlock(Settings.copy(OAK_FENCE));
	public static final Block PIN_CHERRY_FENCE_GATE = new FenceGateBlock(Settings.copy(OAK_FENCE_GATE));
	public static final Block PIN_CHERRY_LEAVES = new LeavesBlock(Settings.copy(OAK_LEAVES));
	public static final Block PIN_CHERRY_LOG = new PillarBlock(Settings.copy(OAK_LOG));
	public static final Block PIN_CHERRY_PLANKS = new Block(Settings.copy(OAK_PLANKS));
	public static final Block PIN_CHERRY_PRESSURE_PLATE = new ModPressurePlateBlock(EVERYTHING, Settings.copy(OAK_PRESSURE_PLATE));
	public static final Block PIN_CHERRY_SAPLING = new FeaturesSaplingBlock(PIN_CHERRY_SAPLING, Settings.copy(OAK_SAPLING));
	public static final Block PIN_CHERRY_SIGN = new ModSignBlock(Settings.copy(OAK_SIGN), SignTypes.PIN_CHERRY);
	public static final Block PIN_CHERRY_SLAB = new SlabBlock(Settings.copy(OAK_SLAB));
	public static final Block PIN_CHERRY_STAIRS = new ModStairsBlock(PIN_CHERRY_PLANKS.getDefaultState(), Settings.copy(OAK_STAIRS));
	public static final Block PIN_CHERRY_TRAPDOOR = new ModTrapdoorBlock(Settings.copy(OAK_TRAPDOOR));
	public static final Block PIN_CHERRY_WALL_SIGN = new ModWallSignBlock(Settings.copy(OAK_SIGN), SignTypes.PIN_CHERRY);
	public static final Block PIN_CHERRY_WOOD = new PillarBlock(Settings.copy(OAK_WOOD));
	
	public static final Block PLUM_BUTTON = new ModWoodButtonBlock(Settings.copy(OAK_BUTTON));
	public static final Block PLUM_DOOR = new ModDoorBlock(Settings.copy(OAK_DOOR));
	public static final Block PLUM_FENCE = new FenceBlock(Settings.copy(OAK_FENCE));
	public static final Block PLUM_FENCE_GATE = new FenceGateBlock(Settings.copy(OAK_FENCE_GATE));
	public static final Block PLUM_LEAVES = new LeavesBlock(Settings.copy(OAK_LEAVES));
	public static final Block PLUM_LOG = new PillarBlock(Settings.copy(OAK_LOG));
	public static final Block PLUM_PLANKS = new Block(Settings.copy(OAK_PLANKS));
	public static final Block PLUM_PRESSURE_PLATE = new ModPressurePlateBlock(EVERYTHING, Settings.copy(OAK_PRESSURE_PLATE));
	public static final Block PLUM_SAPLING = new FeaturesSaplingBlock(PLUM_SAPLING, Settings.copy(OAK_SAPLING));
	public static final Block PLUM_SIGN = new ModSignBlock(Settings.copy(OAK_SIGN), SignTypes.PLUM);
	public static final Block PLUM_SLAB = new SlabBlock(Settings.copy(OAK_SLAB));
	public static final Block PLUM_STAIRS = new ModStairsBlock(PLUM_PLANKS.getDefaultState(), Settings.copy(OAK_STAIRS));
	public static final Block PLUM_TRAPDOOR = new ModTrapdoorBlock(Settings.copy(OAK_TRAPDOOR));
	public static final Block PLUM_WALL_SIGN = new ModWallSignBlock(Settings.copy(OAK_SIGN), SignTypes.PLUM);
	public static final Block PLUM_WOOD = new PillarBlock(Settings.copy(OAK_WOOD));
		
	public static final Block PURFUNGA_BUTTON = new ModWoodButtonBlock(Settings.copy(OAK_BUTTON));
	public static final Block PURFUNGA_CAP = new CapBlock(Settings.of(FUNGUS).strength(0.2F, 0.2F));
	public static final Block PURFUNGA_DOOR = new ModDoorBlock(Settings.copy(OAK_DOOR));
	public static final Block PURFUNGA_FENCE = new FenceBlock(Settings.copy(OAK_FENCE));
	public static final Block PURFUNGA_FENCE_GATE = new FenceGateBlock(Settings.copy(OAK_FENCE_GATE));
	public static final Block PURFUNGA_LOG = new PillarBlock(Settings.copy(OAK_LOG));
	public static final Block PURFUNGA_PLANKS = new Block(Settings.copy(OAK_PLANKS));	
	public static final Block PURFUNGA_PRESSURE_PLATE = new ModPressurePlateBlock(EVERYTHING, Settings.copy(OAK_PRESSURE_PLATE));
	public static final Block PURFUNGA_SAPLING = new AcuaticFungusBlock(PURFUNGA_SAPLING, Settings.of(FUNGUS).strength(0, 0));
	public static final Block PURFUNGA_SIGN = new ModSignBlock(Settings.copy(OAK_SIGN), SignTypes.PURFUNGA);
	public static final Block PURFUNGA_SLAB = new SlabBlock(Settings.copy(OAK_SLAB));
	public static final Block PURFUNGA_STAIRS = new ModStairsBlock(PURFUNGA_PLANKS.getDefaultState(), Settings.copy(OAK_STAIRS));
	public static final Block PURFUNGA_TRAPDOOR = new ModTrapdoorBlock(Settings.copy(OAK_TRAPDOOR));
	public static final Block PURFUNGA_WALL_SIGN = new ModWallSignBlock(Settings.copy(OAK_SIGN), SignTypes.PURFUNGA);
	public static final Block PURFUNGA_WOOD = new PillarBlock(Settings.copy(OAK_WOOD));
		
	public static final Block SPROOM_BUTTON = new ModWoodButtonBlock(Settings.copy(OAK_BUTTON));
	public static final Block SPROOM_DOOR = new ModDoorBlock(Settings.copy(OAK_DOOR));
	public static final Block SPROOM_FENCE = new FenceBlock(Settings.copy(OAK_FENCE));
	public static final Block SPROOM_FENCE_GATE = new FenceGateBlock(Settings.copy(OAK_FENCE_GATE));
	public static final Block SPROOM_LEAVES = new LeavesBlock(Settings.copy(OAK_LEAVES));
	public static final Block SPROOM_LOG = new PillarBlock(Settings.copy(OAK_LOG));
	public static final Block SPROOM_PLANKS = new Block(Settings.copy(OAK_PLANKS));
	public static final Block SPROOM_PRESSURE_PLATE = new ModPressurePlateBlock(EVERYTHING, Settings.copy(OAK_PRESSURE_PLATE));
	public static final Block SPROOM_SAPLING = new StorceanTallSaplingBlock(SPROOM_SAPLING, Settings.copy(OAK_SAPLING));
	public static final Block SPROOM_SIGN = new ModSignBlock(Settings.copy(OAK_SIGN), SignTypes.SPROOM);
	public static final Block SPROOM_SLAB = new SlabBlock(Settings.copy(OAK_SLAB));
	public static final Block SPROOM_STAIRS = new ModStairsBlock(SPROOM_PLANKS.getDefaultState(), Settings.copy(OAK_STAIRS));
	public static final Block SPROOM_TRAPDOOR = new ModTrapdoorBlock(Settings.copy(OAK_TRAPDOOR));
	public static final Block SPROOM_WALL_SIGN = new ModWallSignBlock(Settings.copy(OAK_SIGN), SignTypes.SPROOM);
	public static final Block SPROOM_WOOD = new PillarBlock(Settings.copy(OAK_WOOD));
		
	public static final Block STORTREEAN_BUTTON = new ModWoodButtonBlock(Settings.copy(OAK_BUTTON));
	public static final Block STORTREEAN_DOOR = new ModDoorBlock(Settings.copy(OAK_DOOR));
	public static final Block STORTREEAN_FENCE = new FenceBlock(Settings.copy(OAK_FENCE));
	public static final Block STORTREEAN_FENCE_GATE = new FenceGateBlock(Settings.copy(OAK_FENCE_GATE));
	public static final Block STORTREEAN_LEAVES = new LeavesBlock(Settings.copy(OAK_LEAVES));
	public static final Block STORTREEAN_LOG = new PillarBlock(Settings.copy(OAK_LOG));
	public static final Block STORTREEAN_PLANKS = new Block(Settings.copy(OAK_PLANKS));
	public static final Block STORTREEAN_PRESSURE_PLATE = new ModPressurePlateBlock(EVERYTHING, Settings.copy(OAK_PRESSURE_PLATE));
	public static final Block STORTREEAN_SAPLING = new StorceanTallSaplingBlock(STORTREEAN_SAPLING, Settings.copy(OAK_SAPLING));
	public static final Block STORTREEAN_SIGN = new ModSignBlock(Settings.copy(OAK_SIGN), SignTypes.STORTREEAN);
	public static final Block STORTREEAN_SLAB = new SlabBlock(Settings.copy(OAK_SLAB));
	public static final Block STORTREEAN_STAIRS = new ModStairsBlock(STORTREEAN_PLANKS.getDefaultState(), Settings.copy(OAK_STAIRS));
	public static final Block STORTREEAN_TRAPDOOR = new ModTrapdoorBlock(Settings.copy(OAK_TRAPDOOR));
	public static final Block STORTREEAN_WALL_SIGN = new ModWallSignBlock(Settings.copy(OAK_SIGN), SignTypes.STORTREEAN);
	public static final Block STORTREEAN_WOOD = new PillarBlock(Settings.copy(OAK_WOOD));
	
	public static final Block STRIPPED_ALMOND_LOG = new PillarBlock(Settings.copy(STRIPPED_OAK_LOG));
	public static final Block STRIPPED_ALMOND_WOOD = new PillarBlock(Settings.copy(STRIPPED_OAK_WOOD));
	public static final Block STRIPPED_ANAMEATA_LOG = new PillarBlock(Settings.copy(STRIPPED_OAK_LOG));
	public static final Block STRIPPED_ANAMEATA_WOOD = new PillarBlock(Settings.copy(STRIPPED_OAK_WOOD));
	public static final Block STRIPPED_AQUEAN_LOG = new PillarBlock(Settings.copy(STRIPPED_OAK_LOG));
	public static final Block STRIPPED_AQUEAN_WOOD = new PillarBlock(Settings.copy(STRIPPED_OAK_WOOD));
	public static final Block STRIPPED_BARSHROOKLE_LOG = new PillarBlock(Settings.copy(STRIPPED_OAK_LOG));
	public static final Block STRIPPED_BARSHROOKLE_WOOD = new PillarBlock(Settings.copy(STRIPPED_OAK_WOOD));
	public static final Block STRIPPED_BLACK_BIRCH_LOG = new PillarBlock(Settings.copy(STRIPPED_OAK_LOG));
	public static final Block STRIPPED_BLACK_BIRCH_WOOD = new PillarBlock(Settings.copy(STRIPPED_OAK_WOOD));
	public static final Block STRIPPED_CHERRY_LOG = new PillarBlock(Settings.copy(STRIPPED_OAK_LOG));
	public static final Block STRIPPED_CHERRY_WOOD = new PillarBlock(Settings.copy(STRIPPED_OAK_WOOD));
	public static final Block STRIPPED_COOK_PINE_LOG = new PillarBlock(Settings.copy(STRIPPED_OAK_LOG));
	public static final Block STRIPPED_COOK_PINE_WOOD = new PillarBlock(Settings.copy(STRIPPED_OAK_WOOD));
	public static final Block STRIPPED_CROLOOD_LOG = new PillarBlock(Settings.copy(STRIPPED_OAK_LOG));
	public static final Block STRIPPED_CROLOOD_WOOD = new PillarBlock(Settings.copy(STRIPPED_OAK_WOOD));
	public static final Block STRIPPED_DARK_CROLOOD_LOG = new PillarBlock(Settings.copy(STRIPPED_OAK_LOG));
	public static final Block STRIPPED_DARK_CROLOOD_WOOD = new PillarBlock(Settings.copy(STRIPPED_OAK_WOOD));
	public static final Block STRIPPED_EBONY_LOG = new PillarBlock(Settings.copy(STRIPPED_OAK_LOG));
	public static final Block STRIPPED_EBONY_WOOD = new PillarBlock(Settings.copy(STRIPPED_OAK_WOOD));
	public static final Block STRIPPED_FUCHSITRA_LOG = new PillarBlock(Settings.copy(STRIPPED_OAK_LOG));
	public static final Block STRIPPED_FUCHSITRA_WOOD = new PillarBlock(Settings.copy(STRIPPED_OAK_WOOD));
	public static final Block STRIPPED_FUNERANITE_LOG = new PillarBlock(Settings.copy(STRIPPED_OAK_LOG));
	public static final Block STRIPPED_FUNERANITE_WOOD = new PillarBlock(Settings.copy(STRIPPED_OAK_WOOD));
	public static final Block STRIPPED_GHOSHROOM_LOG = new PillarBlock(Settings.copy(STRIPPED_OAK_LOG));
	public static final Block STRIPPED_GHOSHROOM_WOOD = new PillarBlock(Settings.copy(STRIPPED_OAK_WOOD));
	public static final Block STRIPPED_PELTOGYNE_LOG = new PillarBlock(Settings.copy(STRIPPED_OAK_LOG));
	public static final Block STRIPPED_PELTOGYNE_WOOD = new PillarBlock(Settings.copy(STRIPPED_OAK_WOOD));
	public static final Block STRIPPED_PIN_CHERRY_LOG = new PillarBlock(Settings.copy(STRIPPED_OAK_LOG));
	public static final Block STRIPPED_PIN_CHERRY_WOOD = new PillarBlock(Settings.copy(STRIPPED_OAK_WOOD));
	public static final Block STRIPPED_PLUM_LOG = new PillarBlock(Settings.copy(STRIPPED_OAK_LOG));
	public static final Block STRIPPED_PLUM_WOOD = new PillarBlock(Settings.copy(STRIPPED_OAK_WOOD));
	public static final Block STRIPPED_PURFUNGA_LOG = new PillarBlock(Settings.copy(STRIPPED_OAK_LOG));
	public static final Block STRIPPED_PURFUNGA_WOOD = new PillarBlock(Settings.copy(STRIPPED_OAK_WOOD));
	public static final Block STRIPPED_SPROOM_LOG = new PillarBlock(Settings.copy(STRIPPED_OAK_LOG));
	public static final Block STRIPPED_SPROOM_WOOD = new PillarBlock(Settings.copy(STRIPPED_OAK_WOOD));
	public static final Block STRIPPED_STORTREEAN_LOG = new PillarBlock(Settings.copy(STRIPPED_OAK_LOG));
	public static final Block STRIPPED_STORTREEAN_WOOD = new PillarBlock(Settings.copy(STRIPPED_OAK_WOOD));
	public static final Block STRIPPED_STROOMEAN_LOG = new PillarBlock(Settings.copy(STRIPPED_OAK_LOG));
	public static final Block STRIPPED_STROOMEAN_WOOD = new PillarBlock(Settings.copy(STRIPPED_OAK_WOOD));
	public static final Block STRIPPED_SUNRISE_FUNGUS_LOG = new PillarBlock(Settings.copy(STRIPPED_OAK_LOG));
	public static final Block STRIPPED_SUNRISE_FUNGUS_WOOD = new PillarBlock(Settings.copy(STRIPPED_OAK_WOOD));
	public static final Block STRIPPED_TEAK_LOG = new PillarBlock(Settings.copy(STRIPPED_OAK_LOG));
	public static final Block STRIPPED_TEAK_WOOD = new PillarBlock(Settings.copy(STRIPPED_OAK_WOOD));
	public static final Block STRIPPED_THUNDERCLOUD_PLUM_LOG = new PillarBlock(Settings.copy(STRIPPED_OAK_LOG));
	public static final Block STRIPPED_THUNDERCLOUD_PLUM_WOOD = new PillarBlock(Settings.copy(STRIPPED_OAK_WOOD));
	
	public static final Block STROOMEAN_BUTTON = new ModWoodButtonBlock(Settings.copy(OAK_BUTTON));
	public static final Block STROOMEAN_CAP = new CapBlock(Settings.of(FUNGUS).strength(0.2F, 0.2F));
	public static final Block STROOMEAN_DOOR = new ModDoorBlock(Settings.copy(OAK_DOOR));
	public static final Block STROOMEAN_FENCE = new FenceBlock(Settings.copy(OAK_FENCE));
	public static final Block STROOMEAN_FENCE_GATE = new FenceGateBlock(Settings.copy(OAK_FENCE_GATE));
	public static final Block STROOMEAN_LOG = new PillarBlock(Settings.copy(OAK_LOG));
	public static final Block STROOMEAN_PLANKS = new Block(Settings.copy(OAK_PLANKS));
	public static final Block STROOMEAN_PRESSURE_PLATE = new ModPressurePlateBlock(EVERYTHING, Settings.copy(OAK_PRESSURE_PLATE));
	public static final Block STROOMEAN_SAPLING = new FungusBlock(STROOMEAN_SAPLING, Settings.of(FUNGUS).strength(0, 0));
	public static final Block STROOMEAN_SIGN = new ModSignBlock(Settings.copy(OAK_SIGN), SignTypes.STROOMEAN);
	public static final Block STROOMEAN_SLAB = new SlabBlock(Settings.copy(OAK_SLAB));
	public static final Block STROOMEAN_STAIRS = new ModStairsBlock(STROOMEAN_PLANKS.getDefaultState(), Settings.copy(OAK_STAIRS));
	public static final Block STROOMEAN_TRAPDOOR = new ModTrapdoorBlock(Settings.copy(OAK_TRAPDOOR));
	public static final Block STROOMEAN_WALL_SIGN = new ModWallSignBlock(Settings.copy(OAK_SIGN), SignTypes.STROOMEAN);
	public static final Block STROOMEAN_WOOD = new PillarBlock(Settings.copy(OAK_WOOD));
	
	public static final Block SUNRISE_FUNGUS_BUTTON = new ModWoodButtonBlock(Settings.copy(OAK_BUTTON));
	public static final Block SUNRISE_FUNGUS_CAP = new CapBlock(Settings.of(FUNGUS).strength(0.2F, 0.2F));
	public static final Block SUNRISE_FUNGUS_DOOR = new ModDoorBlock(Settings.copy(OAK_DOOR));
	public static final Block SUNRISE_FUNGUS_FENCE = new FenceBlock(Settings.copy(OAK_FENCE));
	public static final Block SUNRISE_FUNGUS_FENCE_GATE = new FenceGateBlock(Settings.copy(OAK_FENCE_GATE));
	public static final Block SUNRISE_FUNGUS_LOG = new PillarBlock(Settings.copy(OAK_LOG));
	public static final Block SUNRISE_FUNGUS_PLANKS = new Block(Settings.copy(OAK_PLANKS));
	public static final Block SUNRISE_FUNGUS_PRESSURE_PLATE = new ModPressurePlateBlock(EVERYTHING, Settings.copy(OAK_PRESSURE_PLATE));
	public static final Block SUNRISE_FUNGUS_SAPLING = new AcuaticFungusBlock(SUNRISE_FUNGUS_SAPLING, Settings.of(FUNGUS).strength(0, 0));
	public static final Block SUNRISE_FUNGUS_SIGN = new ModSignBlock(Settings.copy(OAK_SIGN), SignTypes.SUNRISE_FUNGUS);
	public static final Block SUNRISE_FUNGUS_SLAB = new SlabBlock(Settings.copy(OAK_SLAB));
	public static final Block SUNRISE_FUNGUS_STAIRS = new ModStairsBlock(SUNRISE_FUNGUS_PLANKS.getDefaultState(), Settings.copy(OAK_STAIRS));
	public static final Block SUNRISE_FUNGUS_TRAPDOOR = new ModTrapdoorBlock(Settings.copy(OAK_TRAPDOOR));
	public static final Block SUNRISE_FUNGUS_WALL_SIGN = new ModWallSignBlock(Settings.copy(OAK_SIGN), SignTypes.SUNRISE_FUNGUS);
	public static final Block SUNRISE_FUNGUS_WOOD = new PillarBlock(Settings.copy(OAK_WOOD));
	
	public static final Block TEAK_BUTTON = new ModWoodButtonBlock(Settings.copy(OAK_BUTTON));
	public static final Block TEAK_DOOR = new ModDoorBlock(Settings.copy(OAK_DOOR));
	public static final Block TEAK_FENCE = new FenceBlock(Settings.copy(OAK_FENCE));
	public static final Block TEAK_FENCE_GATE = new FenceGateBlock(Settings.copy(OAK_FENCE_GATE));
	public static final Block TEAK_LEAVES = new LeavesBlock(Settings.copy(OAK_LEAVES));
	public static final Block TEAK_LOG = new PillarBlock(Settings.copy(OAK_LOG));
	public static final Block TEAK_PLANKS = new Block(Settings.copy(OAK_PLANKS));
	public static final Block TEAK_PRESSURE_PLATE = new ModPressurePlateBlock(EVERYTHING, Settings.copy(OAK_PRESSURE_PLATE));
	public static final Block TEAK_SAPLING = new FeaturesSaplingBlock(TEAK_SAPLING, Settings.copy(OAK_SAPLING));
	public static final Block TEAK_SIGN = new ModSignBlock(Settings.copy(OAK_SIGN), SignTypes.TEAK);
	public static final Block TEAK_SLAB = new SlabBlock(Settings.copy(OAK_SLAB));
	public static final Block TEAK_STAIRS = new ModStairsBlock(TEAK_PLANKS.getDefaultState(), Settings.copy(OAK_STAIRS));
	public static final Block TEAK_TRAPDOOR = new ModTrapdoorBlock(Settings.copy(OAK_TRAPDOOR));
	public static final Block TEAK_WALL_SIGN = new ModWallSignBlock(Settings.copy(OAK_SIGN), SignTypes.TEAK);
	public static final Block TEAK_WOOD = new PillarBlock(Settings.copy(OAK_WOOD));
	
	public static final Block THUNDERCLOUD_PLUM_BUTTON = new ModWoodButtonBlock(Settings.copy(OAK_BUTTON));
	public static final Block THUNDERCLOUD_PLUM_DOOR = new ModDoorBlock(Settings.copy(OAK_DOOR));
	public static final Block THUNDERCLOUD_PLUM_FENCE = new FenceBlock(Settings.copy(OAK_FENCE));
	public static final Block THUNDERCLOUD_PLUM_FENCE_GATE = new FenceGateBlock(Settings.copy(OAK_FENCE_GATE));
	public static final Block THUNDERCLOUD_PLUM_LEAVES = new LeavesBlock(Settings.copy(OAK_LEAVES));
	public static final Block THUNDERCLOUD_PLUM_LOG = new PillarBlock(Settings.copy(OAK_LOG));
	public static final Block THUNDERCLOUD_PLUM_PLANKS = new Block(Settings.copy(OAK_PLANKS));
	public static final Block THUNDERCLOUD_PLUM_PRESSURE_PLATE = new ModPressurePlateBlock(EVERYTHING, Settings.copy(OAK_PRESSURE_PLATE));
	public static final Block THUNDERCLOUD_PLUM_SAPLING = new FeaturesSaplingBlock(THUNDERCLOUD_PLUM_SAPLING, Settings.copy(OAK_SAPLING));
	public static final Block THUNDERCLOUD_PLUM_SIGN = new ModSignBlock(Settings.copy(OAK_SIGN), SignTypes.THUNDERCLOUD_PLUM);
	public static final Block THUNDERCLOUD_PLUM_SLAB = new SlabBlock(Settings.copy(OAK_SLAB));
	public static final Block THUNDERCLOUD_PLUM_STAIRS = new ModStairsBlock(THUNDERCLOUD_PLUM_PLANKS.getDefaultState(), Settings.copy(OAK_STAIRS));
	public static final Block THUNDERCLOUD_PLUM_TRAPDOOR = new ModTrapdoorBlock(Settings.copy(OAK_TRAPDOOR));
	public static final Block THUNDERCLOUD_PLUM_WALL_SIGN = new ModWallSignBlock(Settings.copy(OAK_SIGN), SignTypes.THUNDERCLOUD_PLUM);
	public static final Block THUNDERCLOUD_PLUM_WOOD = new PillarBlock(Settings.copy(OAK_WOOD));
	
	public static final Block POTTED_ALMOND_SAPLING = new FlowerPotBlock(ALMOND_SAPLING, Settings.copy(POTTED_OAK_SAPLING));
	public static final Block POTTED_ANAMEATA_SAPLING = new FlowerPotBlock(ANAMEATA_SAPLING, Settings.copy(POTTED_OAK_SAPLING));
	public static final Block POTTED_AQUEAN_SAPLING = new FlowerPotBlock(AQUEAN_SAPLING, Settings.copy(POTTED_OAK_SAPLING));
	public static final Block POTTED_BARSHROOKLE_SAPLING = new FlowerPotBlock(BARSHROOKLE_SAPLING, Settings.copy(POTTED_OAK_SAPLING));
	public static final Block POTTED_BLACK_BIRCH_SAPLING = new FlowerPotBlock(BLACK_BIRCH_SAPLING, Settings.copy(POTTED_OAK_SAPLING));
	public static final Block POTTED_CHERRY_SAPLING = new FlowerPotBlock(CHERRY_SAPLING, Settings.copy(POTTED_OAK_SAPLING));
	public static final Block POTTED_COOK_PINE_SAPLING = new FlowerPotBlock(COOK_PINE_SAPLING, Settings.copy(POTTED_OAK_SAPLING));
	public static final Block POTTED_CROLOOD_SAPLING = new FlowerPotBlock(CROLOOD_SAPLING, Settings.copy(POTTED_OAK_SAPLING));
	public static final Block POTTED_DARK_CROLOOD_SAPLING = new FlowerPotBlock(DARK_CROLOOD_SAPLING, Settings.copy(POTTED_OAK_SAPLING));
	public static final Block POTTED_EBONY_SAPLING = new FlowerPotBlock(EBONY_SAPLING, Settings.copy(POTTED_OAK_SAPLING));
	public static final Block POTTED_FUCHSITRA_SAPLING = new FlowerPotBlock(FUCHSITRA_SAPLING, Settings.copy(POTTED_OAK_SAPLING));
	public static final Block POTTED_FUNERANITE_SAPLING = new FlowerPotBlock(FUNERANITE_SAPLING, Settings.copy(POTTED_OAK_SAPLING));
	public static final Block POTTED_GHOSHROOM_SAPLING = new FlowerPotBlock(GHOSHROOM_SAPLING, Settings.copy(POTTED_OAK_SAPLING));
	public static final Block POTTED_PELTOGYNE_SAPLING = new FlowerPotBlock(PELTOGYNE_SAPLING, Settings.copy(POTTED_OAK_SAPLING));
	public static final Block POTTED_PIN_CHERRY_SAPLING = new FlowerPotBlock(PIN_CHERRY_SAPLING, Settings.copy(POTTED_OAK_SAPLING));
	public static final Block POTTED_PLUM_SAPLING = new FlowerPotBlock(PLUM_SAPLING, Settings.copy(POTTED_OAK_SAPLING));
	public static final Block POTTED_PURFUNGA_SAPLING = new FlowerPotBlock(PURFUNGA_SAPLING, Settings.copy(POTTED_OAK_SAPLING));
	public static final Block POTTED_SPROOM_SAPLING = new FlowerPotBlock(SPROOM_SAPLING, Settings.copy(POTTED_OAK_SAPLING));
	public static final Block POTTED_STORTREEAN_SAPLING = new FlowerPotBlock(STORTREEAN_SAPLING, Settings.copy(POTTED_OAK_SAPLING));
	public static final Block POTTED_STROOMEAN_SAPLING = new FlowerPotBlock(STROOMEAN_SAPLING, Settings.copy(POTTED_OAK_SAPLING));
	public static final Block POTTED_SUNRISE_FUNGUS_SAPLING = new FlowerPotBlock(SUNRISE_FUNGUS_SAPLING, Settings.copy(POTTED_OAK_SAPLING));
	public static final Block POTTED_TEAK_SAPLING = new FlowerPotBlock(TEAK_SAPLING, Settings.copy(POTTED_OAK_SAPLING));
	public static final Block POTTED_THUNDERCLOUD_PLUM_SAPLING = new FlowerPotBlock(THUNDERCLOUD_PLUM_SAPLING, Settings.copy(POTTED_OAK_SAPLING));

	public static final Block POTTED_BLUE_POPPY = new FlowerPotBlock(BLUE_POPPY, Settings.of(Material.SUPPORTED).breakInstantly().nonOpaque());
	public static final Block POTTED_BLUE_VIOLET = new FlowerPotBlock(BLUE_VIOLET, Settings.of(Material.SUPPORTED).breakInstantly().nonOpaque());
	public static final Block POTTED_BONNET_SPURGE = new FlowerPotBlock(BONNET_SPURGE, Settings.of(Material.SUPPORTED).breakInstantly().nonOpaque());
	public static final Block POTTED_CHOCOLATE_COSMOS_FLOWER = new FlowerPotBlock(CHOCOLATE_COSMOS_FLOWER, Settings.of(Material.SUPPORTED).breakInstantly().nonOpaque());
	public static final Block POTTED_CYCAWLER = new FlowerPotBlock(CYCAWLER, Settings.of(Material.SUPPORTED).breakInstantly().nonOpaque());
	public static final Block POTTED_GARDEN_PINKS = new FlowerPotBlock(GARDEN_PINKS, Settings.of(Material.SUPPORTED).breakInstantly().nonOpaque());
	public static final Block POTTED_GYLDELION_FLOWER = new FlowerPotBlock(GYLDELION_FLOWER, Settings.of(Material.SUPPORTED).breakInstantly().nonOpaque());
	public static final Block POTTED_NATIVE_VIOLET = new FlowerPotBlock(NATIVE_VIOLET, Settings.of(Material.SUPPORTED).breakInstantly().nonOpaque());
	public static final Block POTTED_OPIUM_POPPY = new FlowerPotBlock(OPIUM_POPPY, Settings.of(Material.SUPPORTED).breakInstantly().nonOpaque());
	public static final Block POTTED_POPPY = new FlowerPotBlock(POPPY, Settings.of(Material.SUPPORTED).breakInstantly().nonOpaque());
	public static final Block POTTED_PINK_BRAITOR_FLOWER = new FlowerPotBlock(PINK_BRAITOR_FLOWER, Settings.of(Material.SUPPORTED).breakInstantly().nonOpaque());
	public static final Block POTTED_PINK_ROSE = new FlowerPotBlock(PINK_ROSE, Settings.of(Material.SUPPORTED).breakInstantly().nonOpaque());
	public static final Block POTTED_PINK_ROSE_BUSH = new FlowerPotBlock(PINK_ROSE_BUSH, Settings.of(Material.SUPPORTED).breakInstantly().nonOpaque());
	public static final Block POTTED_MURKANTUAN_SAPLING = new FlowerPotBlock(MURKANTUAN_SAPLING, Settings.of(Material.SUPPORTED).breakInstantly().nonOpaque());
	public static final Block POTTED_SPIKE_LAVENDER = new FlowerPotBlock(SPIKE_LAVENDER, Settings.of(Material.SUPPORTED).breakInstantly().nonOpaque());
	public static final Block POTTED_RED_BRAITOR_FLOWER = new FlowerPotBlock(RED_BRAITOR_FLOWER, Settings.of(Material.SUPPORTED).breakInstantly().nonOpaque());
	public static final Block POTTED_RED_CHOCOLATE_COSMOS_FLOWER = new FlowerPotBlock(RED_CHOCOLATE_COSMOS_FLOWER, Settings.of(Material.SUPPORTED).breakInstantly().nonOpaque());
	public static final Block POTTED_RED_ROSE = new FlowerPotBlock(RED_ROSE, Settings.of(Material.SUPPORTED).breakInstantly().nonOpaque());
	public static final Block POTTED_SPROOM_SPIKE = new FlowerPotBlock(SPROOM_SPIKE, Settings.of(Material.SUPPORTED).breakInstantly().nonOpaque());
	public static final Block POTTED_SWEET_VIOLET = new FlowerPotBlock(SWEET_VIOLET, Settings.of(Material.SUPPORTED).breakInstantly().nonOpaque());
	public static final Block POTTED_TOPPED_LAVENDER = new FlowerPotBlock(TOPPED_LAVENDER, Settings.of(Material.SUPPORTED).breakInstantly().nonOpaque());
	public static final Block POTTED_VASLAME = new FlowerPotBlock(VASLAME, Settings.of(Material.SUPPORTED).breakInstantly().nonOpaque());
	public static final Block POTTED_WEEPY_HOLLOWER = new FlowerPotBlock(WEEPY_HOLLOWER, Settings.of(Material.SUPPORTED).breakInstantly().nonOpaque());

}
